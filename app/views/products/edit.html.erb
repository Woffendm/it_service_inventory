<h2> <%= t(:edit) + t(:product) %>: <%= @product.name %></h2>


<%= form_for @product do |product_form| %>


  <h3> <%= t(:basic_information) %> </h3>
  <div class="form-horizontal">
    <%= fields_for @product do |form| %>
      <div class="control-group">
        <span class="control-label">
          <%= form.label t(:name) %>
        </span>
        <span class="controls">
          <%= form.text_field :name %>
        </span>
      </div>

      <div class="control-group">
        <span class="control-label">
          <%= form.label :description %> 
        </span>
        <span class="controls">
          <%= form.text_area :description, :rows => 4, :cols => 100 %>
        </span>
      </div>

      <div class="control-group">
        <span class="control-label">
          <%= form.label :product_state_id %> 
        </span>
        <span class="controls">
          <%= form.select(:product_state_id, options_from_collection_for_select( @product_states, 
                          :id, :name, :selected => @product.product_state_id.to_s),  
                         {:include_blank => "-" + t(:select) + t(:product_state) + "-"}) %> 
        </span>
      </div>

      <div class="control-group">
        <span class="control-label">
          <%= form.label :product_type_id %> 
        </span>
        <span class="controls">
          <%= form.select(:product_type_id, options_from_collection_for_select( @product_types, 
                          :id, :name, :selected => @product.product_type_id.to_s),  
                         {:include_blank => "-" + t(:select) + t(:product_type) + "-"}) %> 
        </span>
      </div>

      <div class="control-group">
        <span class="control-label">
          <%= form.label :url, "URL" %>
        </span>
        <span class="controls">
          <%= form.text_field :url %>
          <%= link_to "#{content_tag :em, '', :class => 'icon-globe'}".html_safe, @product.url,
                      :target => '_blank' %>
        </span>
      </div>

      <div class="control-group">
        <span class="control-label">
          <%= form.submit  t(:save_changes) %>
        </span>
      </div>
    <% end %>
  </div>




  <!-- Drop-down list of groups that can be added. Only populated with groups that the employee
    doesn't already belong to. -->
  <h3><%= t(:groups) %></h3>
  <% if @product.get_available_groups.any? %>
    <div class="form-inline" >
      <fieldset class="light-border">
        <legend> Add to Group </legend>
        <%= fields_for "product_groups" do |form|%>
          <%= form.label :group_id, t(:group)  %>
          <%= form.select(:group_id, @product.get_available_groups.collect {|p| [p.name, p.id] },  
                         {:include_blank => "-" + t(:select) + t(:group) + "-"}) %> 
          <%= form.submit t(:add) %>
        <% end %>
      </fieldset>
    </div>
  <% end %>


  <!-- Table of all groups that the employee currently belongs to. Admins are able to make changes
   to the employee's group membership here --> 
  <% if @product.product_groups.any? %>
    <table class="table table-striped">
      <thead>
        <tr>
          <th> <%= t(:group) %> </th>
          <th> <%= t(:check_to_remove) %> </th>
        </tr>
      </thead>
      <tbody>
        <% count = 0 %>
        <%= product_form.fields_for "product_groups" do |form| %>
          <% product_group = @product.product_groups.find_by_group_id(@groups[count].id) %>
          <tr>
            <td>
              <%= link_to product_group.group.name, roster_group_path(product_group.group_id) %>
            </td>
            <td>
              <%= form.check_box :_destroy %>
            </td>
          </tr>
          <% count += 1 %>
        <% end %>
      </tbody>
    </table>
  <% end %>




  <!-- Drop-down list of services that can be added. Only populated with services that the product
   doesn't already belong to. -->
  <h3> <%= t(:services) %> </h3>
  <% if can? :create, Product %>
    <% if @product.get_available_services.any? %>
      <div class="form-inline" >
        <fieldset class="light-border">
          <legend> Add to Service </legend>
          <%= fields_for "product_services" do |form|%>
            <%= form.label :service_id, t(:service)  %>
            <%= form.select(:service_id, options_from_collection_for_select(
                            @product.get_available_services, :id, :name),  
                           {:include_blank => "-" + t(:select) + t(:service) + "-"}) %>
            <%= form.submit t(:add) %>
          <% end %>
        </fieldset>
      </div>
    <% end %>
  <% end %>


  <!-- Table of all services that the product currently belongs to. Admins are able to make changes
   to the product's services here --> 
  <% if @product.services.any? %>
    <table class="table table-striped">
      <thead>
        <tr>
          <th> <%= t(:service) %> </th>
          <th> <%= t(:check_to_remove) %> </th>
        </tr>
      </thead>
      <tbody>
        <% count = 0 %>
        <%= product_form.fields_for "product_services" do |form| %>
          <% unless @services[count].nil? %>
            <% service = @services[count] %>
            <tr>
              <td>
                <%= render  :partial => "/shared/can_update_service", 
                            :locals => {:service => service} %>                
              </td>
              <td>
                <% if can? :create, Product %>
                  <%= form.check_box :_destroy %>
                <% end %>
              </td>
            </tr>
          <% end %>
          <% count += 1 %>
        <% end %>
      </tbody>
    </table>
  <% end %>




  <h3> <%= t(:employees) %> </h3>
  <!-- Drop-down list of employees that can be added. Only populated with employees that the product
   doesn't already have. -->
  <% if @product.get_available_employees.any?%>
    <div class="form-inline" >
      <fieldset class="light-border">
        <legend> Add Employee </legend>
        <%= fields_for "employee_products" do |form|%>
          <%= form.label :employee_id, t(:employee) %>
          <%= form.select(:employee_id, options_from_collection_for_select(
                          @product.get_available_employees, :id, :full_name),  
                         {:include_blank => "-" + t(:select) + t(:employee) + "-"}) %> 
          <%= form.select(:allocation, @possible_allocations,
                         {:include_blank => "-" + t(:optional) + t(:allocation) + "-"},
                          :class => "calculator_select allocation_value") %>
          <%= render  :partial => "/shared/fte_calculator_trigger" %>
          <%= form.submit t(:add) %>
        <% end %>
      </fieldset>
    </div>
  <% end %>


  <!-- Creates table with the product's services and allocations. Can be edited by product or
   admin -->
  <% if @product.employee_products.any? %>
    <table class="table table-striped">
      <thead>
        <tr>
          <th> <%= t(:employee) %> </th>
          <th> <%= t(:allocation) %> </th>
          <th> <%= t(:check_to_remove) %> </th>
        </tr>
      </thead>
      <tbody>
        <% count = 0 %>
        <%= product_form.fields_for "employee_products" do |form|%>
          <% unless @employees[count].nil? %>
            <% employee_product =
                        @product.employee_products.find_by_employee_id(@employees[count].id) %>
            <tr>
              <td> 
                <%= render  :partial => "/shared/can_update_employee", 
                            :locals => {:@employee => employee_product.employee} %>
              </td>
              <td class="form-inline"> 
                <%= form.hidden_field(:employee_id, :value => employee_product.employee_id) %>
                <%= form.hidden_field :id %>
                <%= form.select(:allocation, @possible_allocations, 
                               {:selected => employee_product.rounded_allocation}, 
                                :class => "calculator_select allocation_value small") %>
                <%= render :partial => "/shared/fte_calculator_trigger" %>
              </td>
              <td> 
                <%= form.check_box :_destroy, :class => "remove_allocation" %>
              </td>
            </tr>
          <% end %>
          <% count += 1 %>
        <% end %>
      </tbody>
    </table>
  <% end %>
  <br/>




  <%= product_form.submit  t(:save_changes) %> 
<% end %>


<br/><br/>
<%= link_to t(:return_to) + t(:all_products), products_path %>


<%= render  :partial => "/shared/fte_calculator_body", 
            :locals => {:@allocation_precision => @allocation_precision,
                        :@fte_hours_per_week => @fte_hours_per_week } %>