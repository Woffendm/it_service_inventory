<h2> 
  <%= t(:edit) + t(:employee_colon) %> &nbsp; <%= @employee.full_name %>
  <%= link_to "#{content_tag :em, '', :class => ''}
              #{t(:show)}".html_safe, employee_path(@employee.id) %>
</h2>



<%= form_for @employee do |employee_form| %>


  <h3><%= t(:basic_information) %> </h3>
  <div class="form-horizontal">
    <%= fields_for @employee do |form| %>
      <div class="control-group">
        <span class="control-label">
          <%= form.label t(:last_name) %>
        </span>
        <span class="controls">
          <%= @employee.name_last %>
        </span>
      </div>
      <div class="control-group">
        <span class="control-label">
          <%= form.label t(:first_name) %>
        </span>
        <span class="controls">
          <%= @employee.name_first %>
        </span>
      </div>
      <div class="control-group">
        <span class="control-label">
          <%= form.label t(:email) %> 
        </span>
        <span class="controls">
          <%= @employee.email %>    
        </span>
      </div>
      <div class="control-group">
        <span class="control-label">
          <%= form.label :notes %> 
        </span>
        <span class="controls">
          <%= form.text_area :notes, :maxlength => 1000, :rows => 4, :cols => 100 %>
        </span>
      </div>
    <% end %>
  </div>


  <!-- Drop-down list of groups that can be added. Only populated with groups that the employee
   doesn't already belong to. -->
  <h3><%= t(:groups) %></h3>
  <% if can? :manage, :all %>
    <% if @employee.get_available_groups.any? %>
      <div class="form-inline" >
        <fieldset class="light-border">
          <legend>Add to Group</legend>
          <%= fields_for "employee_groups" do |form|%>
            <%= form.label :group_id, t(:group)  %>
            <%= form.select(:group_id, @employee.get_available_groups.collect {|p| [p.name, p.id] },  
                           {:include_blank => "-" + t(:select) + t(:group) + "-"}) %> 
            <%= form.submit t(:add), :class => "submission" %>
          <% end %>
        </fieldset>
      </div>
    <% end %>
  <% end %>


  <!-- Table of all groups that the employee currently belongs to. Admins are able to make changes
   to the employee's group membership here --> 
  <% if @employee.employee_groups.any? %>
    <table class="table table-striped">
      <thead>
        <tr>
          <th> <%= t(:group) %> </th>
          <th> <%= t(:admin) %>? </th>
          <th> <%= t(:check_to_remove) %> </th>
        </tr>
      </thead>
      <tbody>
        <% count = 0 %>
        <%= employee_form.fields_for "employee_groups" do |form| %>
          <% employee_group = @employee.employee_groups.find_by_group_id(@groups[count].id) %>
          <tr>
            <td>
              <%= link_to employee_group.group.name, group_path(employee_group.group_id) %>
            </td>
            <td>
              <% if can? :update, employee_group.group %>
                <%= form.hidden_field(:group_id, :value => employee_group.group_id) %>
                <%= form.hidden_field :id %>
                <%= form.check_box :group_admin %>
              <% end %>
            </td>
            <td>
              <% if can? :update, employee_group.group %>
                <%= form.check_box :_destroy %>
              <% end %>
            </td>
          </tr>
          <% count += 1 %>
        <% end %>
      </tbody>
    </table>
  <% end %>



  <h3><%= t(:services) %></h3>
  <div id="over_allocation" class="error hidden">
      Error: <%= t(:over_allocated) %>
  </div>



  <!-- Drop-down list of services that can be added. Only populated with services that the employee
   doesn't already have. -->
  <% if @employee.get_available_services.any?%>
    <div class="form-inline" >
      <fieldset class="light-border">
        <legend>Add New Allocation</legend>
        <%= fields_for "employee_allocations" do |form|%>
          <%= form.label :service_id, t(:service) %>
          <%= form.select(:service_id, options_from_collection_for_select(
                          @employee.get_available_services, :id, :name),  
                         {:include_blank => "-" + t(:select) + t(:service) + "-"}) %> 
          <%= form.select(:allocation, @possible_allocations,
                         {:include_blank => "-" + t(:select) + t(:allocation) + "-"},
                          :class => "calculator_select allocation_value") %>
          <%= render  :partial => "/shared/fte_calculator_trigger" %>
          <%= form.submit t(:add), :class => "submission"%>
        <% end %>
      </fieldset>
    </div>
  <% end %>



  <!-- Creates table with the employee's services and allocations. Can be edited by employee or
   admin -->
  <% if @employee.employee_allocations.any? %>
    <table class="table table-striped">
      <thead>
        <tr>
          <th><%= t(:service) %></th>
          <th><%= t(:allocation) %></th>
          <th> <%= t(:check_to_remove) %> </th>
        </tr>
      </thead>
      <tbody>
        <% count = 0 %>
        <%= employee_form.fields_for "employee_allocations" do |form|%>
          <% unless @services[count].nil? %>
            <% employee_allocation = @services[count].get_employee_allocation(@employee) %>
            <tr>
              <td> 
                <%= link_to employee_allocation.service.name,
                            service_path(employee_allocation.service_id) %>
              </td>
              <td class="form-inline"> 
                <%= form.hidden_field(:service_id, :value => employee_allocation.service_id) %>
                <%= form.hidden_field :id %>
                <%= form.select(:allocation, @possible_allocations, 
                               {:selected => employee_allocation.rounded_allocation}, 
                                :class => "calculator_select allocation_value") %>
                <%= render  :partial => "/shared/fte_calculator_trigger" %>
              </td>
              <td> 
                <%= form.check_box :_destroy, :class => "remove_allocation" %>
              </td>
            </tr>
          <% end %>
          <% count += 1 %>
        <% end %>
      </tbody>
    </table>
  <% end %>
  <br/>


  <%= employee_form.submit  t(:save_changes), :class => "submission" %> 
<% end %>




<%= render  :partial => "/shared/fte_calculator_body", 
            :locals => {:@allocation_precision => @allocation_precision,
                        :@fte_hours_per_week => @fte_hours_per_week } %>